openapi: 3.1.0
info:
  title: WSO2 MI Copilot
  description: Backend for WSO2 MI Copilot VSCode Extension
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 0.1.0
paths:
  /health:
    get:
      summary: Health
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /chat/artifact-generation:
    post:
      tags:
      - generation
      summary: Artifact Gen Chat
      operationId: artifact_gen_chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /suggestions/initial:
    get:
      tags:
      - suggestions
      summary: Initial Suggestions
      operationId: initial_suggestions
      parameters:
      - name: num_suggestions
        in: query
        required: true
        schema:
          type: integer
          title: Num Suggestions
      - name: q_type
        in: query
        required: true
        schema:
          type: string
          title: Q Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /suggestions:
    post:
      tags:
      - suggestions
      summary: Suggestions
      operationId: suggestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/copilot:
    post:
      tags:
      - chat
      summary: Copilt Chat
      operationId: copilot_chat
      parameters:
      - name: operation_id
        in: query
        required: false
        schema:
          default: copilt_chat
          title: Operation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/artifact-editing:
    post:
      tags:
      - generation
      summary: Artifact Edit Chat
      operationId: artifact_edit_chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ChatRequest:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          title: Messages
        context:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Context
        num_suggestions:
          anyOf:
          - type: integer
          - type: 'null'
          title: Num Suggestions
          default: 1
      type: object
      required:
      - messages
      title: ChatRequest
    ChatResponse:
      properties:
        event:
          $ref: '#/components/schemas/Event'
        error:
          allOf:
          - $ref: '#/components/schemas/Error'
        content:
          type: string
          title: Content
        questions:
          items:
            type: string
          type: array
          title: Questions
          default: []
      type: object
      required:
      - event
      title: ChatResponse
    Error:
      properties:
        error:
          type: string
          title: Error
      type: object
      required:
      - error
      title: Error
    Event:
      type: string
      enum:
      - suggestion_generation_error
      - suggestion_generation_success
      - chat_generating
      - chat_error
      - chat_success
      title: Event
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Message:
      properties:
        role:
          type: string
          enum:
          - system
          - user
          - assistant
          title: Role
        content:
          type: string
          title: Content
      type: object
      required:
      - role
      - content
      title: Message
    SuggestionRequest:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          title: Messages
        context:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Context
        num_suggestions:
          anyOf:
          - type: integer
          - type: 'null'
          title: Num Suggestions
          default: 1
        type:
          type: string
          enum:
          - artifact_gen
          - copilot_chat
          title: Type
      type: object
      required:
      - messages
      - type
      title: SuggestionRequest
    SuggestionResponse:
      properties:
        event:
          $ref: '#/components/schemas/Event'
        error:
          allOf:
          - $ref: '#/components/schemas/Error'
        questions:
          items:
            type: string
          type: array
          title: Questions
      type: object
      required:
      - event
      - questions
      title: SuggestionResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
