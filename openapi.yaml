components:
  schemas:
    ChatRequest:
      properties:
        context:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Context
        messages:
          items:
            $ref: '#/components/schemas/Message'
          title: Messages
          type: array
        num_suggestions:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: Num Suggestions
      required:
      - messages
      title: ChatRequest
      type: object
    ChatResponse:
      properties:
        content:
          title: Content
          type: string
        error:
          allOf:
          - $ref: '#/components/schemas/Error'
        event:
          $ref: '#/components/schemas/Event'
        questions:
          default: []
          items:
            type: string
          title: Questions
          type: array
      required:
      - event
      title: ChatResponse
      type: object
    Error:
      properties:
        error:
          title: Error
          type: string
      required:
      - error
      title: Error
      type: object
    Event:
      enum:
      - suggestion_generation_error
      - suggestion_generation_success
      - chat_generating
      - chat_error
      - chat_success
      title: Event
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Message:
      properties:
        content:
          title: Content
          type: string
        role:
          enum:
          - system
          - user
          - assistant
          title: Role
          type: string
      required:
      - role
      - content
      title: Message
      type: object
    SuggestionRequest:
      properties:
        context:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Context
        messages:
          items:
            $ref: '#/components/schemas/Message'
          title: Messages
          type: array
        num_suggestions:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: Num Suggestions
        type:
          enum:
          - artifact_gen
          - copilot_chat
          title: Type
          type: string
      required:
      - messages
      - type
      title: SuggestionRequest
      type: object
    SuggestionResponse:
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/Error'
        event:
          $ref: '#/components/schemas/Event'
        questions:
          items:
            type: string
          title: Questions
          type: array
      required:
      - event
      - questions
      title: SuggestionResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: Backend for WSO2 MI Copilot VSCode Extension
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: WSO2 MI Copilot
  version: 0.1.0
openapi: 3.1.0
paths:
  /chat/artifact-editing:
    post:
      operationId: artifact_edit_chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Artifact Edit Chat
      tags:
      - generation
  /chat/artifact-generation:
    post:
      operationId: artifact_gen_chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Artifact Gen Chat
      tags:
      - generation
  /chat/copilot:
    post:
      operationId: copilot_chat
      parameters:
      - in: query
        name: operation_id
        required: false
        schema:
          default: copilt_chat
          title: Operation Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Copilt Chat
      tags:
      - chat
  /health:
    get:
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health
  /suggestions:
    post:
      operationId: suggestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Suggestions
      tags:
      - suggestions
  /suggestions/initial:
    get:
      operationId: initial_suggestions
      parameters:
      - in: query
        name: num_suggestions
        required: true
        schema:
          title: Num Suggestions
          type: integer
      - in: query
        name: q_type
        required: true
        schema:
          title: Q Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Initial Suggestions
      tags:
      - suggestions
